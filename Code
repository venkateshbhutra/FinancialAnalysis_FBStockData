#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue Aug 24 12:07:08 2021

@author: venky
"""

#Financial Analysis of FB stock data over the past 5 years

#Importing modules to be used
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

#accessing csv file
file_url='/Users/venky/Desktop/fb.csv'
fb=pd.read_csv(file_url)
start_2019='2019-01-01'
#start_2020='2020-01-01'
#start_2021='2021-01-01'

#Describtion of data
print(fb.head())
print(fb.tail())
print(fb.describe())

#Plotting the closing price of fb stock
plt.figure(figsize=(15,8))
fb['Close'].plot()
plt.show()

#CFiltering data to 2019 & 2020 packets
fb=fb.loc[(fb.Date >= start_2019)]
#fb_2020=fb.loc[(fb.Date >= start_2020) & ( fb.Date < start_2021)]
#print(fb_2019)
#print(fb_2020)

#Calculating Price Difference
#Price Difference is tomorrows closing price - todays closing price
fb['Price_Diff']=fb['Close'].shift(-1)-fb['Close']
print(fb.head())

#Calculating Daily Return
#Daily return is the ratio between price difference and closing price
fb['Daily_Return']=fb['Price_Diff']/fb['Close']
print(fb.head())

#Evaluating direction of share price
#for a positive price difference we say 1 and for a negative price difference we say 0
fb['Direction']=[1 if fb['Price_Diff'].loc[ei]>0 else 0 for ei in fb.index]
print(fb.head())

#Calculating moving average
#We use the rolling average feature to check trends
#Here MA10 and MA50 are studied to see the differe
fb['MA10']=fb['Close'].rolling(10).mean()
fb['MA50']=fb['Close'].rolling(50).mean()
fb=fb.dropna()
print(fb.tail())

#To note - for MA10>MA50 we expect trend to follow, i.e, stock price may rise for a while
plt.figure(figsize=(15,8))
fb.plot(x='Date',y=['MA50','MA10'],label=['MA50','MA10'])

plt.legend()
plt.show()

#Now creating trading strategies
#We have the Fast Signal as MA10 and slow signal as MA50
#We strategize that if MA10>MA50 then we buy and hold (1)else we dont do anything(0)
fb['Shares']=[1 if fb.loc[ei,'MA10']>fb.loc[ei,'MA50'] else 0 for ei in fb.index]
fb.head()


#Daily Profit - If MA10>MA50, then closing price of tomorrow - todays closing price
fb['Close1']=fb['Close'].shift(-1)
fb['Profit']=[fb.loc[ei,'Close1']-fb.loc[ei,'Close'] if fb.loc[ei,'Shares']==1 else 0 for ei in fb.index]
fb['Profit'].plot()
plt.axhline(y=0,color='red')

#Calculating Cummulative wealth generated
plt.figure(figsize=(15,8))
fb['Wealth']=fb['Profit'].cumsum()
fb.plot(x='Date',y='Wealth',label='Wealth')
plt.title('Wealth accumulated over the period of time')
